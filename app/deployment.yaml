# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    app: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: 574205320701.dkr.ecr.ap-northeast-2.amazonaws.com/project07-ecr:latest
          ports:
            - containerPort: 5000
          
          # 리소스 요청/제한
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          
          # 환경 변수
          env:
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: GEMINI_API_KEY
            - name: TAGO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: TAGO_API_KEY
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: API_KEY
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: FLASK_SECRET_KEY
            - name: MYSQL_URI
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: MYSQL_URI
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              value: "ap-northeast-2"
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: S3_BUCKET
            - name: DYNAMODB_TABLE
              valueFrom:
                secretKeyRef:
                  name: flask-secrets
                  key: DYNAMODB_TABLE
          
          # 헬스 체크
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3

---
# HorizontalPodAutoscaler - 파드 자동 스케일링
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max