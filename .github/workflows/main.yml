# .github/workflows/main.yml
name: 프로젝트 CI/CD 파이프라인

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main # main 브랜치로 풀 리퀘스트가 열릴 때 실행

jobs:
  build-and-test:
    runs-on: ubuntu-latest # 최신 Ubuntu 환경에서 실행

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4 # 저장소 코드 가져오기

      - name: 현재 디렉토리 구조 확인 # <-- 이 단계를 추가했습니다!
        run: ls -R

      - name: Python 환경 설정
        uses: actions/setup-python@v5 # Python 환경 설정
        with:
          python-version: '3.12.3' # 사용하시는 Python 버전 지정

      - name: 의존성 설치
        run: pip install -r requirements.txt
        # 'ls -R' 로그를 보고 'requirements.txt'의 정확한 경로를 확인하여
        # 아래 working-directory를 수정해야 합니다.
        # 예: working-directory: ./feature/ec2-flask
        # 예: working-directory: ./my_app
        # 만약 requirements.txt가 최상위 폴더에 있다면 working-directory 줄을 삭제하세요.
        working-directory: ./feature/ec2-flask # <-- 일단 이전에 추정했던 경로로 유지

      - name: Flask 앱 테스트 실행
        run: pytest # Flask 앱의 테스트를 실행하는 명령어 (예: pytest, python -m unittest discover 등)
        # 'ls -R' 로그를 보고 테스트 파일의 정확한 경로를 확인하여
        # 아래 working-directory를 수정해야 합니다.
        working-directory: ./feature/ec2-flask # <-- 일단 이전에 추정했던 경로로 유지
